#########################################################################
####                            开发环境                              ####
#########################################################################
server:
  port: 10002
  servlet:
    context-path: /
  tomcat:
    uri-encoding: utf-8
  shutdown: graceful

spring:
  application:
    # Spring Boot Admin展示的客户端项目名，不设置，会使用自动生成的随机id
    name: boot
  boot:
    admin:
      client:
        # Spring Boot Admin 服务端地址
        instance:
          metadata:
            # 客户端端点信息的安全认证信息
            user.name: ${spring.security.user.name}
            user.password: ${spring.security.user.password}
          service-base-url: "http://localhost:8000/"
  security:
    user:
      name: geekerstar
      password: geekerstar
  # Sharding-JDBC的配置
  shardingsphere:
    datasource:
      names: ds
      ds:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.0.120:3306/geekerstar?useUnicode=true&characterEncoding=utf-8
        username: root
        password: 666666
    encrypt:
      encryptors:
        # md5加密算法-sharding-jdbc内置的算法，这里名称任意
        encryptor_md5:
          type: MD5
        # aes加密算法-sharding-jdbc内置的算法，这里名称任意
        encryptor_aes:
          type: AES
          props:
            # 设置秘钥，保证不泄露
            aes.key.value: geekerstar
      tables:
        # 逻辑表名
        t_user:
          ## 配置脱敏的列名
          columns:
            # 逻辑列，sharding-jdbc中写SQL需要用到的列
            password:
              # 存储明文的字段
              #plainColumn: password
              # 存储密文的字段
              cipherColumn: cipher_pwd
              # 指定加密器
              encryptor: encryptor_md5
            # 身份证号的逻辑列，使用aes这种可逆的加密算法
            id_card:
              cipherColumn: id_card
              encryptor: encryptor_aes
            # 手机号的逻辑列，使用aes这种可逆的加密算法
            mobile:
              cipherColumn: mobile
              # 指定明文列
              plainColumn: mobile_data
              encryptor: encryptor_aes
    props:
      sql:
        # 日志显示具体的SQL
        show: true
  #      query:
  #        with:
  #          cipher:
  #            column: false

management:
  endpoint:
    health:
      # 端点健康情况，默认值"never"，设置为"always"可以显示硬盘使用情况和线程情况
      show-details: always
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        # 设置端点暴露的哪些内容，默认["health","info"]，设置"*"代表暴露所有可访问的端点
        include: "*"
      base-path: /actuator
    enabled-by-default: true
  metrics:
    tags:
      application: ${spring.application.name}

knife4j:
  enable: true
  basic:
    enable: false
    # Basic认证用户名
    username: geekerstar
    # Basic认证密码
    password: geekerstar
  openapi:
    title: Boot接口文档
    description: ""
    email: 247507792@qq.com
    concat: Geekerstar
    url:
    version: v1.0
    license: Apache 2.0
    license-url: https://stackoverflow.com/
    terms-of-service-url: https://stackoverflow.com/
    group:
      readwrite-splitting:
        group-name: 读写分离
        api-rule: package
        api-rule-resources:
          - com.geekerstar.sharding.module.split.controller
